/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mod Left";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 22 34 33 21 20 32 31 19 18 30 11 23 35>;
            require-prior-idle-ms = <150>;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "Homerow Mod Right";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 0 12 24>;
        };
    };

    macros {
        gbp: gbp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(U)) &kp NUMBER_0 &kp NUMBER_0 &kp A &kp NUMBER_3 &kp SPACE>;
            label = "GBP";
        };

        euro: euro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(U)) &kp NUMBER_2 &kp NUMBER_0 &kp A &kp C &kp SPACE>;
            label = "EURO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TILDE   &kp Q        &kp W        &kp E          &kp R            &kp T        &kp Y        &kp U         &kp I         &kp O        &kp P           &kp BACKSLASH
&kp ESCAPE  &hml LGUI A  &hml LALT S  &hml LSHIFT D  &hml LCTRL F     &kp G        &kp H        &hmr RCTRL J  &hmr RSHFT K  &hmr RALT L  &hmr RGUI SEMI  &kp SQT
&mo 3       &kp Z        &kp X        &kp C          &kp V            &kp B        &kp N        &kp M         &kp COMMA     &kp DOT      &kp FSLH        &none
                                      &kp LSHIFT     &lt 1 BACKSPACE  &lt 2 DEL    &lt 1 ENTER  &lt 2 SPACE   &kp RSHIFT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB   &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7     &kp N8     &kp N9     &kp N0  &kp BSPC
&kp CAPS  &none   &none   &none   &none   &none     &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &none   &none
&none     &none   &none   &none   &none   &none     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &none   &none
                          &none   &none   &mo 4     &none     &kp TAB    &none
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB   &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp CAPS  &none     &none   &none     &none     &none        &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&none     &none     &none   &none     &none     &none        &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                            &kp LGUI  &none     &none        &mo 4      &none      &none
            >;
        };

        special {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none    &none       &kp C_PLAY_PAUSE  &none         &none       &none  &bt BT_CLR
&bt BT_CLR    &none         &none         &none         &none         &none    &kp C_PREV  &kp C_VOL_DN      &kp C_VOL_UP  &kp C_NEXT  &none  &none
&none         &gbp          &euro         &none         &none         &none    &none       &none             &none         &none       &none  &studio_unlock
                                          &none         &none         &none    &none       &none             &none
            >;
        };

        functions {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&none   &none   &none   &none   &none   &none     &none   &none   &none   &none    &none    &none
&none   &none   &none   &none   &none   &none     &none   &none   &none   &none    &none    &none
                        &none   &none   &none     &none   &none   &none
            >;
        };
    };
};
